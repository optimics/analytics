---
name: Publish
on:
  pull_request_target:
    branches:
      - master
    types:
      - closed

jobs:
  release-tag:
    name: Tag Release
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.tag_check.outputs.exists_tag }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_KEY }}
        with:
          cache: npm
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - name: Set Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Read Version
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
      - name: Tag Check
        id: tag_check
        run: |
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "exists_tag=true" >> ${GITHUB_OUTPUT}
          else
            echo "exists_tag=false" >> ${GITHUB_OUTPUT}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Git Tag
        if: steps.tag_check.outputs.exists_tag == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          version: ${{ env.CURRENT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
      - name: Install
        if: steps.tag_check.outputs.exists_tag == 'false'
        run: npm ci
      - name: Build
        if: steps.tag_check.outputs.exists_tag == 'false'
        run: npm run build
      - name: Publish packages
        if: steps.tag_check.outputs.exists_tag == 'false'
        run: |
          git tag v${{ env.CURRENT_VERSION }}
          lerna publish from-git --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_KEY }}

  deploy-ga4-manager:
    name: Deploy GA4 Manager
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && needs.release-tag.outputs.skip != 'true'
    environment: gcp:google-sheets:ga4-manager:le
    concurrency: gcp:google-sheets:ga4-manager:le
    needs:
      - release-tag
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: google-github-actions/setup-gcloud@v1
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Deploy to GCP
        env:
          TF_VAR_BUCKET_TERRAFORM: ${{ vars.TF_VAR_BUCKET_TERRAFORM }}
          TF_VAR_GCP_PROJECT: ${{ vars.TF_VAR_GCP_PROJECT }}
          TF_VAR_GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: ./tf/run-terraform.sh "google/sheets/ga4-manager/terraform"
